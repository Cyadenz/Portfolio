!function(a){"use strict";a('a.js-scroll-trigger[href*="#"]:not([href="#"])').click(function(){if(location.pathname.replace(/^\//,"")==this.pathname.replace(/^\//,"")&&location.hostname==this.hostname){var e=a(this.hash);if((e=e.length?e:a("[name="+this.hash.slice(1)+"]")).length)return a("html, body").animate({scrollTop:e.offset().top-57},1e3,"easeInOutExpo"),!1}}),a(".js-scroll-trigger").click(function(){a(".navbar-collapse").collapse("hide")}),a("body").scrollspy({target:"#mainNav",offset:57});var e=function(){a("#mainNav").offset().top>100?a("#mainNav").addClass("navbar-shrink"):a("#mainNav").removeClass("navbar-shrink")};e(),a(window).scroll(e),window.sr=ScrollReveal(),sr.reveal(".sr-icons",{duration:600,scale:.3,distance:"0px"},200),sr.reveal(".sr-button",{duration:1e3,delay:200}),sr.reveal(".sr-contact",{duration:600,scale:.3,distance:"0px"},300),sr.reveal(".sr-bar",{duration:500,scale:.3,distance:"0px"},200),sr.reveal(".sr-veille",{duration:600,scale:.3,distance:"50px"},200),sr.reveal(".sr-2button",{duration:500,scale:.3,distance:"1px"},200),a(".popup-gallery").magnificPopup({delegate:"a",type:"image",tLoading:"Loading image #%curr%...",mainClass:"mfp-img-mobile",gallery:{enabled:!0,navigateByImgClick:!0,preload:[0,1]}})}(jQuery);




$(document).ready(function(){
	
	//Check to see if the window is top if not then display button
	$(window).scroll(function(){
		if ($(this).scrollTop() > 100) {
			$('.scrollToTop').fadeIn();
		} else {
			$('.scrollToTop').fadeOut();
		}
	});	
    document.getElementById("defaultOpen").click();
    document.getElementById('focusMe').click();
});

var acc = document.getElementsByClassName("accordion");
var i;

for (i = 0; i < acc.length; i++) {
    acc[i].addEventListener("click", function() {
        this.classList.toggle("active");
        var panel = this.nextElementSibling;
        if (panel.style.display === "block") {
            panel.style.display = "none";
        } else {
            panel.style.display = "block";
        }
    });
}

$('button').on('click', turn);

function turn(e) {
  $('.fa').toggleClass('down');
}

function openPage(pageName, elmnt, color) {
    // Hide all elements with class="tabcontent" by default */
    var i, tabcontent, tablinks;
    tabcontent = document.getElementsByClassName("tabcontent");
    for (i = 0; i < tabcontent.length; i++) {
        tabcontent[i].style.display = "none";
    }

    // Remove the background color of all tablinks/buttons
    tablinks = document.getElementsByClassName("tablink");
    for (i = 0; i < tablinks.length; i++) {
        tablinks[i].style.backgroundColor = "";
    }

    // Show the specific tab content
    document.getElementById(pageName).style.display = "block";

    // Add the specific color to the button used to open the tab content
    elmnt.style.backgroundColor = color;
}

// Get the element with id="defaultOpen" and click on it
// document.getElementById("defaultOpen").click(); 

function showPages(id){


    var totalNumberOfPages = 2;
    for(var i=1; i<=totalNumberOfPages; i++){

        if (document.getElementById('page'+i)) {

            document.getElementById('page'+i).style.display='none';
        }

    }
        if (document.getElementById('page'+id)) {

            document.getElementById('page'+id).style.display='block';
        }
};

$('.pag').click(function()
{
    $('.active').removeClass('active');
    $(this).addClass('active');
});

$(document).ready(function() {
  var slideShowEls = $(".slide");

  /***
   * this function will create all the slideshow
   *  functionality, given a div with a collection
   *  of image elements.
   ***/
  var createSlideShow = function createSlideShow(elements) {
    // first, we want to initialize the slideshow.
    //  this will mean moving the images into a container,
    //  and adding a div containing the slideshow controls.
    $(elements).each(function() {
      // Gather all images in this div.
      var slideEls = $(this).children("img");
      
      // create two divs: one for controls and one for slides.
      // The controls div will contain a prev and next button.
      var slideControls = $("<div>").addClass("slideShowControls text-center");
      var prevBtn = $("<button>")
        .addClass("prevBtn button button3")
        .text("← Prev");
      var nextBtn = $("<button>")
        .addClass("nextBtn button button3")
        .text("Next →");
      slideControls.append(prevBtn, [nextBtn]);
      
      // The slides div will be the new home of the 
      //    slide els from above.
      var slideContents = $("<div>").addClass("slideContents");
      slideEls.detach();
      slideContents.append(slideEls);
      slideEls.hide();
      slideEls.first().show();
      
      // both newly created divs are placed in the slideshow container.
      $(this).append([slideContents], slideControls);

    }) // End .each(), the initialization routine.

    // Now, we need to create the listeners for the
    //   next and prev clicks.
    $(".nextBtn").on("click", function() {
      // We need to get the slides container...
      var slidePane = $(this).parent().siblings(".slideContents");
      //  ... hide the visible slide and show the next one.
      slidePane.find("img:visible").hide()
        .next().show();
      
      // If no slide is currently showing, there WAS no next one.
      //  Redisplay the first one.
      if (!slidePane.find("img").is(":visible"))
        slidePane.children("img").first().show();
    });

    $(".prevBtn").on("click", function() {
      // We need to get the slides container...
      var slidePane = $(this).parent().siblings(".slideContents");
      
      //  ... hide the visible slide and show the previous one.
      slidePane.find("img:visible").hide()
        .prev().show();
      
      // If no slide is currently showing, there WAS no prev one.
      //  Redisplay the last one.
      if (!slidePane.find("img").is(":visible"))
        slidePane.children("img").last().show();
    });

  }
  
  // Run the initialize routine for all slideshow divs.
  //  This will create the slideshow structure and implement and
  //  handle event listeners.
  createSlideShow(slideShowEls);

});